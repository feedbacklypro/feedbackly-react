{"version":3,"sources":["../utils.ts","../dialog.tsx","../feedbackly-widget.tsx","../button.tsx","../label.tsx","../input.tsx","../textarea.tsx","../feedbackly.tsx"],"names":["cn","inputs","twMerge","clsx","Dialog","r","DialogTrigger","DialogPortal","DialogOverlay","c","className","props","ref","jsx","DialogContent","children","jsxs","X","DialogHeader","DialogFooter","DialogTitle","DialogDescription","buttonVariants","cva","Button","C","variant","size","asChild","Slot","labelVariants","Label","N","x","Input","T","type","Textarea","F","feedbackOptions","Lightbulb","Bug","MessageSquare","FeedbacklyWidget","trigger","feedbackType","setFeedbackType","useState","open","setOpen","event","formData","option","ChevronRight","Feedbackly"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGO,SAASA,CAAMC,CAAAA,GAAAA,CAAAA,CAAsB,CAC1C,OAAOC,qBAAAA,CAAQC,SAAKF,CAAAA,CAAM,CAAC,CAC7B,CCAA,IAAMG,CAAyB,CAAAC,YAAA,CAAA,IAAA,CAEzBC,EAAgCD,YAEhCE,CAAAA,OAAAA,CAAAA,CAAAA,CAA+BF,YAIrC,CAAA,MAAA,CAAA,IAAMG,EAAsBC,YAG1B,CAAA,UAAA,CAAA,CAAC,CAAE,SAAA,CAAAC,EAAW,GAAGC,CAAM,CAAGC,CAAAA,CAAAA,GAC1BC,eAAiBR,YAAhB,CAAA,OAAA,CAAA,CACC,IAAKO,CACL,CAAA,SAAA,CAAWZ,EACT,yKACAU,CAAAA,CACF,CACC,CAAA,GAAGC,EACN,CACD,CAAA,CACDH,CAAc,CAAA,WAAA,CAA8BH,qBAAQ,WAEpD,CAAA,IAAMS,CAAsB,CAAAL,YAAA,CAAA,UAAA,CAG1B,CAAC,CAAE,SAAA,CAAAC,EAAW,QAAAK,CAAAA,CAAAA,CAAU,GAAGJ,CAAM,CAAA,CAAGC,CACpCI,GAAAA,eAAAA,CAACT,EAAA,CACC,QAAA,CAAA,CAAAM,cAACL,CAAAA,CAAAA,CAAA,EAAc,CACfQ,CAAAA,eAAAA,CAAiBX,YAAhB,CAAA,OAAA,CAAA,CACC,IAAKO,CACL,CAAA,SAAA,CAAWZ,CACT,CAAA,6fAAA,CACAU,CACF,CACC,CAAA,GAAGC,CAEH,CAAA,QAAA,CAAA,CAAAI,EACDC,eAAiB,CAAAX,YAAA,CAAA,KAAA,CAAhB,CAAsB,SAAA,CAAU,gRAC/B,QAAAQ,CAAAA,CAAAA,cAAAA,CAACI,aAAA,CAAA,CAAE,UAAU,SAAU,CAAA,CAAA,CACvBJ,eAAC,MAAK,CAAA,CAAA,SAAA,CAAU,UAAU,QAAK,CAAA,OAAA,CAAA,CAAA,CAAA,CACjC,CACF,CAAA,CAAA,CAAA,CAAA,CACF,CACD,CACDC,CAAAA,CAAAA,CAAc,WAA8B,CAAAT,YAAA,CAAA,OAAA,CAAQ,YAEpD,IAAMa,CAAAA,CAAe,CAAC,CACpB,UAAAR,CACA,CAAA,GAAGC,CACL,CACEE,GAAAA,cAAAA,CAAC,OACC,SAAWb,CAAAA,CAAAA,CACT,oDACAU,CAAAA,CACF,EACC,GAAGC,CAAAA,CACN,CAEFO,CAAAA,CAAAA,CAAa,YAAc,cAE3B,CAAA,IAAMC,CAAe,CAAA,CAAC,CACpB,SAAAT,CAAAA,CAAAA,CACA,GAAGC,CACL,CAAA,GACEE,eAAC,KACC,CAAA,CAAA,SAAA,CAAWb,CACT,CAAA,+DAAA,CACAU,CACF,CACC,CAAA,GAAGC,CACN,CAAA,CAAA,CAEFQ,EAAa,WAAc,CAAA,cAAA,CAE3B,IAAMC,CAAAA,CAAoBX,wBAGxB,CAAC,CAAE,SAAAC,CAAAA,CAAAA,CAAW,GAAGC,CAAM,CAAA,CAAGC,CAC1BC,GAAAA,cAAAA,CAAiBR,mBAAhB,CACC,GAAA,CAAKO,CACL,CAAA,SAAA,CAAWZ,EACT,mDACAU,CAAAA,CACF,CACC,CAAA,GAAGC,EACN,CACD,CAAA,CACDS,EAAY,WAA8B,CAAAf,YAAA,CAAA,KAAA,CAAM,YAEhD,IAAMgB,CAAAA,CAA0BZ,YAG9B,CAAA,UAAA,CAAA,CAAC,CAAE,SAAAC,CAAAA,CAAAA,CAAW,GAAGC,CAAM,EAAGC,CAC1BC,GAAAA,cAAAA,CAAiBR,YAAhB,CAAA,WAAA,CAAA,CACC,IAAKO,CACL,CAAA,SAAA,CAAWZ,EAAG,+BAAiCU,CAAAA,CAAS,EACvD,GAAGC,CAAAA,CACN,CACD,CAAA,CACDU,EAAkB,WAA8B,CAAAhB,YAAA,CAAA,WAAA,CAAY,WChG5D,CCJA,IAAMiB,CAAiBC,CAAAA,0BAAAA,CACrB,2VACA,CACE,QAAA,CAAU,CACR,OAAS,CAAA,CACP,QACE,+DACF,CAAA,WAAA,CACE,8EACF,CAAA,OAAA,CACE,2FACF,SACE,CAAA,wEAAA,CACF,KAAO,CAAA,8CAAA,CACP,KAAM,iDACR,CAAA,CACA,IAAM,CAAA,CACJ,QAAS,eACT,CAAA,EAAA,CAAI,8BACJ,EAAI,CAAA,sBAAA,CACJ,KAAM,SACR,CACF,CACA,CAAA,eAAA,CAAiB,CACf,OAAS,CAAA,SAAA,CACT,IAAM,CAAA,SACR,CACF,CACF,CAAA,CAQMC,CAAe,CAAAC,YAAA,CAAA,UAAA,CACnB,CAAC,CAAE,SAAA,CAAAf,EAAW,OAAAgB,CAAAA,CAAAA,CAAS,KAAAC,CAAM,CAAA,OAAA,CAAAC,CAAU,CAAA,CAAA,CAAA,CAAO,GAAGjB,CAAM,CAAA,CAAGC,CAGtDC,GAAAA,cAAAA,CAFWe,EAAUC,cAAO,CAAA,QAAA,CAE3B,CACC,SAAA,CAAW7B,EAAGsB,CAAe,CAAA,CAAE,QAAAI,CAAS,CAAA,IAAA,CAAAC,EAAM,SAAAjB,CAAAA,CAAU,CAAC,CAAC,EAC1D,GAAKE,CAAAA,CAAAA,CACJ,GAAGD,CAAAA,CACN,CAGN,CACAa,CAAAA,CAAAA,CAAO,WAAc,CAAA,QAAA,CChDrB,IAAMM,CAAgBP,CAAAA,0BAAAA,CACpB,4FACF,CAEMQ,CAAAA,CAAAA,CAAcC,wBAIlB,CAAC,CAAE,UAAAtB,CAAW,CAAA,GAAGC,CAAM,CAAA,CAAGC,IAC1BC,cAAgB,CAAAoB,YAAA,CAAA,IAAA,CAAf,CACC,GAAA,CAAKrB,EACL,SAAWZ,CAAAA,CAAAA,CAAG8B,CAAc,EAAA,CAAGpB,CAAS,CACvC,CAAA,GAAGC,EACN,CACD,CAAA,CACDoB,EAAM,WAA6B,CAAAE,YAAA,CAAA,IAAA,CAAK,WCpBxC,CAMA,IAAMC,CAAc,CAAAC,YAAA,CAAA,UAAA,CAClB,CAAC,CAAE,UAAAzB,CAAW,CAAA,IAAA,CAAA0B,EAAM,GAAGzB,CAAM,EAAGC,CAE5BC,GAAAA,cAAAA,CAAC,OACC,CAAA,CAAA,IAAA,CAAMuB,EACN,SAAWpC,CAAAA,CAAAA,CACT,4VACAU,CAAAA,CACF,EACA,GAAKE,CAAAA,CAAAA,CACJ,GAAGD,CAAAA,CACN,CAGN,CACAuB,CAAAA,CAAAA,CAAM,WAAc,CAAA,OAAA,CCfpB,IAAMG,CAAAA,CAAiBC,YACrB,CAAA,UAAA,CAAA,CAAC,CAAE,SAAA5B,CAAAA,CAAAA,CAAW,GAAGC,CAAM,EAAGC,CAEtBC,GAAAA,cAAAA,CAAC,YACC,SAAWb,CAAAA,CAAAA,CACT,+PACAU,CACF,CAAA,CACA,GAAKE,CAAAA,CAAAA,CACJ,GAAGD,CACN,CAAA,CAGN,CACA0B,CAAAA,CAAAA,CAAS,YAAc,UJyBjB,CAvBN,IAAME,EAAkB,CACtB,CAAE,MAAO,SAAW,CAAA,KAAA,CAAO,iBAAmB,CAAA,IAAA,CAAMC,qBAAU,CAC9D,CAAA,CAAE,KAAO,CAAA,KAAA,CAAO,MAAO,YAAc,CAAA,IAAA,CAAMC,eAAI,CAAA,CAC/C,CAAE,KAAO,CAAA,UAAA,CAAY,MAAO,kBAAoB,CAAA,IAAA,CAAMC,yBAAc,CACtE,CAAA,CAEO,SAASC,CAAAA,CAAiB,CAAE,OAAAC,CAAAA,CAAQ,CAA0B,CAAA,CACnE,GAAM,CAACC,CAAAA,CAAcC,CAAe,CAAA,CAAIC,WAAuB,IAAI,CAAA,CAC7D,CAACC,CAAAA,CAAMC,CAAO,CAAIF,CAAAA,UAAAA,CAAS,CAAK,CAAA,CAAA,CAUtC,OACE/B,eAACZ,CAAAA,CAAAA,CAAA,CACC,IAAA,CAAM4C,EACN,YAAcC,CAAAA,CAAAA,CAEd,QAAApC,CAAAA,CAAAA,cAAAA,CAACP,EAAA,CAAc,OAAA,CAAO,GAAE,QAAAsC,CAAAA,CAAAA,CAAQ,EAChC5B,eAACF,CAAAA,CAAAA,CAAA,CAAc,SAAA,CAAU,mBACvB,QAAAE,CAAAA,CAAAA,eAAAA,CAACE,CAAA,CAAA,CACC,UAAAL,cAACO,CAAAA,CAAAA,CAAA,CAAY,QAAA,CAAA,UAAA,CAAQ,EACrBP,cAACQ,CAAAA,CAAAA,CAAA,CAAkB,QAEnB,CAAA,uDAAA,CAAA,CAAA,CAAA,CACF,EACEwB,CAuBA7B,CAAAA,eAAAA,CAAC,MACC,CAAA,CAAA,QAAA,CA7CYkC,GAA4C,CAChEA,CAAAA,CAAM,cAAe,EAAA,CACrB,IAAMC,CAAW,CAAA,IAAI,QAASD,CAAAA,CAAAA,CAAM,aAAa,CACjD,CAAA,OAAA,CAAQ,IAAI,iBAAmB,CAAA,MAAA,CAAO,YAAYC,CAAQ,CAAC,CAC3DF,CAAAA,CAAAA,CAAQ,EAAK,CACbH,CAAAA,CAAAA,CAAgB,IAAI,EACtB,EAwCU,SAAU,CAAA,WAAA,CAEV,QAAA9B,CAAAA,CAAAA,eAAAA,CAAC,OAAI,SAAU,CAAA,WAAA,CACb,UAAAH,cAACkB,CAAAA,CAAAA,CAAA,CAAM,OAAQ,CAAA,OAAA,CAAQ,QAAK,CAAA,OAAA,CAAA,CAAA,CAC5BlB,eAACqB,CAAA,CAAA,CACC,EAAG,CAAA,OAAA,CACH,KAAK,OACL,CAAA,WAAA,CAAY,mBACZ,CAAA,QAAA,CAAQ,GACV,CACF,CAAA,CAAA,CAAA,CACAlB,gBAAC,KAAI,CAAA,CAAA,SAAA,CAAU,YACb,QAAAH,CAAAA,CAAAA,cAAAA,CAACkB,CAAA,CAAA,CAAM,QAAQ,aAAc,CAAA,QAAA,CAAA,aAAA,CAAW,CACxClB,CAAAA,cAAAA,CAACwB,EAAA,CACC,EAAA,CAAG,aACH,CAAA,IAAA,CAAK,cACL,WAAY,CAAA,yBAAA,CACZ,SAAQ,CACV,CAAA,CAAA,CAAA,CAAA,CACF,EACCQ,CAAiB,GAAA,KAAA,EAChB7B,eAAC,CAAA,KAAA,CAAA,CAAI,UAAU,WACb,CAAA,QAAA,CAAA,CAAAH,cAACkB,CAAAA,CAAAA,CAAA,CAAM,OAAQ,CAAA,OAAA,CAAQ,QAAkB,CAAA,oBAAA,CAAA,CAAA,CACzClB,eAACwB,CAAA,CAAA,CACC,GAAG,OACH,CAAA,IAAA,CAAK,QACL,WAAY,CAAA,CAAA;AAAA;AAAA,kBAGd,CAAA,CAAA,CAAA,CAAA,CACF,EAEFrB,eAACG,CAAAA,CAAAA,CAAA,CACC,QAAAN,CAAAA,CAAAA,cAAAA,CAACW,CAAA,CAAA,CACC,IAAK,CAAA,QAAA,CACL,QAAQ,WACR,CAAA,OAAA,CAAS,IAAMsB,CAAAA,CAAgB,IAAI,CAAA,CACpC,gBAED,CACAjC,CAAAA,cAAAA,CAACW,CAAA,CAAA,CAAO,IAAK,CAAA,QAAA,CAAS,kBAAM,CAC9B,CAAA,CAAA,CAAA,CAAA,CACF,CAlEAR,CAAAA,eAAAA,CAAC,KAAI,CAAA,CAAA,SAAA,CAAU,OACb,QAAAH,CAAAA,CAAAA,cAAAA,CAAC,IAAG,CAAA,CAAA,SAAA,CAAU,0BAA2B,CAAA,QAAA,CAAA,gCAAA,CAEzC,EACAA,cAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,WAAA,CACZ,QAAA0B,CAAAA,CAAAA,CAAgB,IAAKa,CACpBpC,EAAAA,eAAAA,CAACQ,CAAA,CAAA,CAEC,OAAQ,CAAA,SAAA,CACR,UAAU,wBACV,CAAA,OAAA,CAAS,IAAMsB,CAAgBM,CAAAA,CAAAA,CAAO,KAAqB,CAE3D,CAAA,QAAA,CAAA,CAAApC,eAAC,CAAA,KAAA,CAAA,CAAI,SAAU,CAAA,mBAAA,CACb,UAAAH,cAACuC,CAAAA,CAAAA,CAAO,IAAP,CAAA,CAAY,SAAU,CAAA,cAAA,CAAe,EACrCA,CAAO,CAAA,KAAA,CAAA,CACV,CACAvC,CAAAA,cAAAA,CAACwC,wBAAA,CAAA,CAAa,UAAU,SAAU,CAAA,CAAA,CAAA,CAAA,CAT7BD,CAAO,CAAA,KAUd,CACD,CAAA,CACH,GACF,CAgDJ,CAAA,CAAA,CAAA,CAAA,CACF,CAEJ,CKtHaE,IAAAA,CAAAA,CAAa,CAAC,CAAE,OAAAV,CAAAA,CAAQ,IAC5B/B,cAAC8B,CAAAA,CAAAA,CAAA,CAAiB,OAAA,CAASC,CAAS,CAAA","file":"index.js","sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\";\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n","import * as React from \"react\";\r\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\";\r\nimport { X } from \"lucide-react\";\r\nimport { cn } from \"./utils\";\r\n\r\nconst Dialog = DialogPrimitive.Root;\r\n\r\nconst DialogTrigger = DialogPrimitive.Trigger;\r\n\r\nconst DialogPortal = DialogPrimitive.Portal;\r\n\r\nconst DialogClose = DialogPrimitive.Close;\r\n\r\nconst DialogOverlay = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Overlay\r\n    ref={ref}\r\n    className={cn(\r\n      \"fixed inset-0 z-50 bg-black/10 backdrop-blur-sm data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName;\r\n\r\nconst DialogContent = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Content>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\r\n>(({ className, children, ...props }, ref) => (\r\n  <DialogPortal>\r\n    <DialogOverlay />\r\n    <DialogPrimitive.Content\r\n      ref={ref}\r\n      className={cn(\r\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\r\n        className\r\n      )}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\r\n        <X className=\"h-4 w-4\" />\r\n        <span className=\"sr-only\">Close</span>\r\n      </DialogPrimitive.Close>\r\n    </DialogPrimitive.Content>\r\n  </DialogPortal>\r\n));\r\nDialogContent.displayName = DialogPrimitive.Content.displayName;\r\n\r\nconst DialogHeader = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nDialogHeader.displayName = \"DialogHeader\";\r\n\r\nconst DialogFooter = ({\r\n  className,\r\n  ...props\r\n}: React.HTMLAttributes<HTMLDivElement>) => (\r\n  <div\r\n    className={cn(\r\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n);\r\nDialogFooter.displayName = \"DialogFooter\";\r\n\r\nconst DialogTitle = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Title>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Title\r\n    ref={ref}\r\n    className={cn(\r\n      \"text-lg font-semibold leading-none tracking-tight\",\r\n      className\r\n    )}\r\n    {...props}\r\n  />\r\n));\r\nDialogTitle.displayName = DialogPrimitive.Title.displayName;\r\n\r\nconst DialogDescription = React.forwardRef<\r\n  React.ElementRef<typeof DialogPrimitive.Description>,\r\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\r\n>(({ className, ...props }, ref) => (\r\n  <DialogPrimitive.Description\r\n    ref={ref}\r\n    className={cn(\"text-sm text-muted-foreground\", className)}\r\n    {...props}\r\n  />\r\n));\r\nDialogDescription.displayName = DialogPrimitive.Description.displayName;\r\n\r\nexport {\r\n  Dialog,\r\n  DialogPortal,\r\n  DialogOverlay,\r\n  DialogTrigger,\r\n  DialogClose,\r\n  DialogContent,\r\n  DialogHeader,\r\n  DialogFooter,\r\n  DialogTitle,\r\n  DialogDescription,\r\n};\r\n","import {\r\n  Dialog,\r\n  DialogContent,\r\n  DialogDescription,\r\n  DialogFooter,\r\n  DialogHeader,\r\n  DialogTitle,\r\n  DialogTrigger,\r\n} from \"./dialog\";\r\nimport { ChevronRight, MessageSquare, Bug, Lightbulb } from \"lucide-react\";\r\nimport { Button } from \"./button\";\r\nimport { useState } from \"react\";\r\nimport { Label } from \"./label\";\r\nimport { Input } from \"./input\";\r\nimport { Textarea } from \"./textarea\";\r\n\r\ninterface FeedbacklyWidgetProps {\r\n  trigger: React.ReactNode;\r\n}\r\n\r\ntype FeedbackType = \"feature\" | \"bug\" | \"feedback\" | null;\r\n\r\nconst feedbackOptions = [\r\n  { value: \"feature\", label: \"Feature Request\", icon: Lightbulb },\r\n  { value: \"bug\", label: \"Bug Report\", icon: Bug },\r\n  { value: \"feedback\", label: \"General Feedback\", icon: MessageSquare },\r\n];\r\n\r\nexport function FeedbacklyWidget({ trigger }: FeedbacklyWidgetProps) {\r\n  const [feedbackType, setFeedbackType] = useState<FeedbackType>(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    const formData = new FormData(event.currentTarget);\r\n    console.log(\"Form submitted:\", Object.fromEntries(formData));\r\n    setOpen(false);\r\n    setFeedbackType(null);\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={open}\r\n      onOpenChange={setOpen}\r\n    >\r\n      <DialogTrigger asChild>{trigger}</DialogTrigger>\r\n      <DialogContent className=\"sm:max-w-[425px]\">\r\n        <DialogHeader>\r\n          <DialogTitle>Feedback</DialogTitle>\r\n          <DialogDescription>\r\n            Help us improve our product by sharing your thoughts.\r\n          </DialogDescription>\r\n        </DialogHeader>\r\n        {!feedbackType ? (\r\n          <div className=\"py-6\">\r\n            <h4 className=\"mb-4 text-sm font-medium\">\r\n              What would you like to report?\r\n            </h4>\r\n            <div className=\"space-y-2\">\r\n              {feedbackOptions.map((option) => (\r\n                <Button\r\n                  key={option.value}\r\n                  variant=\"outline\"\r\n                  className=\"w-full justify-between\"\r\n                  onClick={() => setFeedbackType(option.value as FeedbackType)}\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <option.icon className=\"mr-2 h-4 w-4\" />\r\n                    {option.label}\r\n                  </div>\r\n                  <ChevronRight className=\"h-4 w-4\" />\r\n                </Button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <form\r\n            onSubmit={handleSubmit}\r\n            className=\"space-y-4\"\r\n          >\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"title\">Title</Label>\r\n              <Input\r\n                id=\"title\"\r\n                name=\"title\"\r\n                placeholder=\"Brief description\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"space-y-2\">\r\n              <Label htmlFor=\"description\">Description</Label>\r\n              <Textarea\r\n                id=\"description\"\r\n                name=\"description\"\r\n                placeholder=\"Provide more details...\"\r\n                required\r\n              />\r\n            </div>\r\n            {feedbackType === \"bug\" && (\r\n              <div className=\"space-y-2\">\r\n                <Label htmlFor=\"steps\">Steps to Reproduce</Label>\r\n                <Textarea\r\n                  id=\"steps\"\r\n                  name=\"steps\"\r\n                  placeholder=\"1. Go to...\r\n2. Click on...\r\n3. Observe that...\"\r\n                />\r\n              </div>\r\n            )}\r\n            <DialogFooter>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"secondary\"\r\n                onClick={() => setFeedbackType(null)}\r\n              >\r\n                Back\r\n              </Button>\r\n              <Button type=\"submit\">Submit</Button>\r\n            </DialogFooter>\r\n          </form>\r\n        )}\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"./utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90\",\r\n        outline:\r\n          \"border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2\",\r\n        sm: \"h-8 rounded-md px-3 text-xs\",\r\n        lg: \"h-10 rounded-md px-8\",\r\n        icon: \"h-9 w-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface ButtonProps\r\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\r\n    VariantProps<typeof buttonVariants> {\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"button\";\r\n    return (\r\n      <Comp\r\n        className={cn(buttonVariants({ variant, size, className }))}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nButton.displayName = \"Button\";\r\n\r\nexport { Button, buttonVariants };\r\n","import * as React from \"react\";\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"./utils\";\r\n\r\nconst labelVariants = cva(\r\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\r\n);\r\n\r\nconst Label = React.forwardRef<\r\n  React.ElementRef<typeof LabelPrimitive.Root>,\r\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\r\n    VariantProps<typeof labelVariants>\r\n>(({ className, ...props }, ref) => (\r\n  <LabelPrimitive.Root\r\n    ref={ref}\r\n    className={cn(labelVariants(), className)}\r\n    {...props}\r\n  />\r\n));\r\nLabel.displayName = LabelPrimitive.Root.displayName;\r\n\r\nexport { Label };\r\n","import * as React from \"react\";\r\nimport { cn } from \"./utils\";\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-input bg-transparent px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nInput.displayName = \"Input\";\r\n\r\nexport { Input };\r\n","import * as React from \"react\";\r\nimport { cn } from \"./utils\";\r\n\r\nexport interface TextareaProps\r\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\r\n\r\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\r\n  ({ className, ...props }, ref) => {\r\n    return (\r\n      <textarea\r\n        className={cn(\r\n          \"flex min-h-[60px] w-full rounded-md border border-input bg-transparent px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    );\r\n  }\r\n);\r\nTextarea.displayName = \"Textarea\";\r\n\r\nexport { Textarea };\r\n","import React from \"react\";\r\nimport { FeedbacklyWidget } from \"./feedbackly-widget\";\r\n\r\ninterface FeedbacklyProps {\r\n  trigger: React.ReactNode;\r\n}\r\n\r\nexport const Feedbackly = ({ trigger }: FeedbacklyProps) => {\r\n  return <FeedbacklyWidget trigger={trigger} />;\r\n};\r\n"]}